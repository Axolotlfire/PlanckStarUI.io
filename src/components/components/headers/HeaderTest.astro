---
// 2 Instructions in this component

import { Image } from "astro:assets";
import planckstar from "../../../assets/icons/planckstar.svg";

const navItems = [
  { href: "/components", label: "Components" },
  { href: "/backgrounds", label: "Backgrounds" },
  { href: "/effects", label: "Effects" },
];
---

<style>
  header {
    width: 100%;
    padding: 1rem;
    background-color: rgba(var(--background), 0.8);
    color: var(--tertiary);
    border-top: 1px solid rgba(var(--tertiary), 0.3);
    border-bottom: 1px solid rgba(var(--tertiary), 0.3);
    backdrop-filter: blur(4px);
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);
  }

  nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 4rem;
    max-width: 100%;
    margin: 0 auto;
  }

  .logo {
    font-size: 1.125rem;
    font-weight: 600;
    letter-spacing: 0.05em;
    color: white;
    padding: 0.5rem 0;
    width: 1.5rem;
  }

  #menu-toggle,
  #close-toggle {
    display: none;
    font-size: 1.25rem;
    cursor: pointer;
    background: none;
    border: none;
  }

  .nav-links {
    display: flex;
    align-items: center;
    height: 100%;
    gap: 1.5rem;
  }

  .nav-links a {
    padding: 0.5rem 0.75rem;
    transition: color 0.2s;
    color: inherit;
    text-decoration: none;
  }

  .nav-links a:hover {
    color: rgba(255, 255, 255, 0.5);
  }

  #mobile-menu {
    display: none;
    position: fixed;
    top: 0;
    right: 0;
    height: 100vh;
    width: 80%;
    background-color: rgba(0, 0, 0, 0.4);
    backdrop-filter: blur(2px);
    border-left: 1px solid rgba(var(--tertiary), 0.3);
    padding: 1rem;
    box-sizing: border-box;
  }

  #mobile-menu ul {
    padding-left: 2rem;
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  #mobile-menu a {
    font-size: 1rem;
    color: inherit;
    text-decoration: none;
  }

  #mobile-menu a:hover {
    color: rgba(255, 255, 255, 0.5);
  }

  @media (max-width: 768px) {
    #menu-toggle {
      display: block;
    }

    .nav-links {
      display: none;
    }

    #mobile-menu.show {
      display: block;
    }
  }
</style>

<header>
  <nav>
    <a href="/" class="logo">
      <Image src={planckstar} alt="Planckstar" style="width: 100%;" />
    </a>

    <button id="menu-toggle" aria-label="Toggle menu">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1"
        stroke="currentColor"
        width="24"
        height="24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path>
      </svg>
    </button>

    <ul class="nav-links">
      {
        navItems.map((item) => (
          <li>
            <a href={item.href}>{item.label}</a>
          </li>
        ))
      }
    </ul>

    <div id="mobile-menu">
      <ul>
        <button id="close-toggle" aria-label="Close menu">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1"
            stroke="currentColor"
            width="24"
            height="24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
        {
          navItems.map((item) => (
            <li>
              <a href={item.href}>{item.label}</a>
            </li>
          ))
        }
      </ul>
    </div>
  </nav>
</header>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const toggle = document.getElementById("menu-toggle");
    const mobileMenu = document.getElementById("mobile-menu");
    const closeToggle = document.getElementById("close-toggle");

    if (!toggle || !mobileMenu || !closeToggle) return;

    toggle.addEventListener("click", () => {
      mobileMenu.classList.add("show");
    });

    closeToggle.addEventListener("click", () => {
      mobileMenu.classList.remove("show");
    });

    const mobileLinks = mobileMenu.querySelectorAll("a");
    mobileLinks.forEach((link) => {
      link.addEventListener("click", () => {
        mobileMenu.classList.remove("show");
      });
    });
  });
</script>
